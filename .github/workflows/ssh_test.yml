# .github/workflows/sync-to-private.yml
# This workflow triggers when a PR is opened to the public repo
# It clones the private repo using SSH and syncs changes

name: Sync PR to Private Repo

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main  # or your default branch

jobs:
  sync-to-private:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Public Repo (PR branch)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0  # Full history for better sync
      
      # Setup SSH key for private repo access
      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_REPO_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add GitHub to known hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
          # # Configure SSH to use the key
          # cat >> ~/.ssh/config <<EOF
          # Host github.com
          #   HostName github.com
          #   User git
          #   IdentityFile ~/.ssh/id_ed25519
          #   StrictHostKeyChecking no
          # EOF
          
          # chmod 600 ~/.ssh/config  
      
      - name: Configure Git
        run: |
          git config --global user.name "LaxminarayanaV7416"
          git config --global user.email "lvadnala@nd.edu"
      
      - name: Clone Private Repo
        env:
          PRIVATE_REPO: git@github.com:LaxminarayanaV7416/python-test-private-repo.git # e.g., git@github.com:user/private-repo.git
        run: |
          cd ..
          git clone "$PRIVATE_REPO" private-repo
          cd private-repo
          echo "Private repo cloned successfully"
          git branch -a
      
      # - name: Sync Changes to Private Repo
      #   run: |
      #     # Copy changes from public repo to private repo
      #     cd ../private-repo
          
      #     # Create a new branch for this PR
      #     BRANCH_NAME="sync-pr-${{ github.event.pull_request.number }}"
      #     git checkout -b "$BRANCH_NAME"
          
      #     # Copy files (excluding .git directory)
      #     rsync -av --exclude='.git' ../$(basename $GITHUB_WORKSPACE)/ ./
          
      #     # Check if there are changes
      #     if [[ -n $(git status --porcelain) ]]; then
      #       echo "Changes detected, committing..."
      #       git add .
      #       git commit -m "Sync from public PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"
      #       git push origin "$BRANCH_NAME"
      #       echo "Changes pushed to private repo branch: $BRANCH_NAME"
      #     else
      #       echo "No changes to sync"
      #     fi
      
      # - name: Comment on PR
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const prNumber = context.payload.pull_request.number;
      #       const branchName = `sync-pr-${prNumber}`;
            
      #       github.rest.issues.createComment({
      #         issue_number: prNumber,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `âœ… Changes synced to private repository on branch: \`${branchName}\`\n\nPrivate repo maintainers can review and merge these changes.`
      #       });
      
      # Cleanup SSH key
      - name: Cleanup
        if: always()
        run: |
          rm -rf ~/.ssh/id_rsa
          rm -rf ~/.ssh/known_hosts